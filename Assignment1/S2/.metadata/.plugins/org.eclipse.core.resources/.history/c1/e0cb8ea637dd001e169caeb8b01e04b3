.syntax unified
.thumb

#include "definitions.s"
#include "initialise.s"


.text
.global main


main:
//button enable (input)
   LDR R0, =GPIOA //loading port A in R0 register
   LDRB R1, [R0, #MODER] // loading the byte from GPIOA with an offset of MODER (this is 0x00)
   AND R1, #0b11111100 //bitmasking so that only the last two are changed (bits 0 and 1)
   STRB R1, [R0, #MODER] // save back to GPIOA

//LED engable (output)
	LDR R2, =GPIOE @address of GPIOE
	LDRH R1, [R0, #MODER + 2] // loading the high hal-word in thr MODER register with an offset of 2
    LDR R2, =0X5555 //loading binary calue of 01 (ouput mode) for each of the upper two bytes (0x5 = 0101)
    STRH R2, [R0, #MODER + 2]
    LDRB R4, =0b00000000
    STRB R4, [R2, #ODR + 1] //loading LED pattern into memeory

//comparison bit
	LDRB R5, =0b00000001
    B loop

loop:
	LDRB R3, [R0, #IDR]
	ANDS R1, #0X01 // comparing the on state with the value of 1 )checking if button is on
    BNE button_pressed
    B loop

button_pressed:
	ORR R4, R5, R4
	LSL R4, R4, #1
	STRB R4, [R2 #ODR + 1]
	B loop


